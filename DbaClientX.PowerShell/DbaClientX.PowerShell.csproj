<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
                <TargetFrameworks Condition=" '$([MSBuild]::IsOsPlatform(`Windows`))' ">
                        netstandard2.0;net472;net8.0
                </TargetFrameworks>
                <TargetFrameworks Condition=" '$([MSBuild]::IsOsPlatform(`OSX`))'  Or '$([MSBuild]::IsOsPlatform(`Linux`))' ">
                        netstandard2.0;net8.0
                </TargetFrameworks>
		<Description>PowerShell Module for working with databases</Description>
		<AssemblyName>DBAClientX.PowerShell</AssemblyName>
		<AssemblyTitle>DBAClientX.PowerShell</AssemblyTitle>
		<VersionPrefix>0.1.0</VersionPrefix>
		<GeneratePackageOnBuild>False</GeneratePackageOnBuild>
		<Company>Evotec</Company>
		<Authors>Przemyslaw Klys</Authors>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="PowerShellStandard.Library" Version="5.1.1" PrivateAssets="all" />
	</ItemGroup>
        <ItemGroup>
                <ProjectReference Include="..\DbaClientX.Core\DbaClientX.Core.csproj" />
                <ProjectReference Include="..\DbaClientX.SqlServer\DbaClientX.SqlServer.csproj" />
        </ItemGroup>

	<ItemGroup>
		<Using Include="System.Collections" />
		<Using Include="System.Management.Automation" />
		<Using Include="System.Threading.Tasks" />
		<Using Include="System.Collections.Concurrent" />
		<Using Include="System.Threading" />
		<Using Include="System" />
		<Using Include="System.Collections.Generic" />
		<Using Include="System.Linq" />
		<Using Include="System.Text" />
		<Using Include="System.IO" />
		<Using Include="System.Net" />
		<Using Include="System.Data" />
	</ItemGroup>

	<!-- Make sure the output DLL's from library are included in the output -->
	<PropertyGroup>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	</PropertyGroup>

	<!-- We need to remove PowerShell conflicting libraries as it will break output -->
	<Target Name="RemoveFilesAfterBuild" AfterTargets="Build">
		<Delete Files="$(OutDir)System.Management.Automation.dll" />
		<Delete Files="$(OutDir)System.Management.dll" />
	</Target>

        <PropertyGroup>
                <!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation file. -->
                <GenerateDocumentationFile>true</GenerateDocumentationFile>
                <!-- Disable strict mode to avoid failing the build when documentation cannot be generated -->
                <XmlDoc2CmdletDocStrict>false</XmlDoc2CmdletDocStrict>
        </PropertyGroup>

	<ItemGroup>
		<!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation file. -->
		<PackageReference Include="MatejKafka.XmlDoc2CmdletDoc" Version="0.4.2">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
</Project>